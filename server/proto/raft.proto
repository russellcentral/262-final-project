syntax = "proto3";
package raft;

// Raft consensus RPCs
service Raft {
  // Candidate → followers
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  // Leader → followers (replicate log entries & heartbeats)
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}

message RequestVoteRequest {
  int64 term = 1;
  string candidate_id = 2;
  int64 last_log_index = 3;
  int64 last_log_term = 4;
}
message RequestVoteResponse {
  int64 term = 1;
  bool vote_granted = 2;
}

message LogEntry {
  int64 term = 1;
  string data = 2; // JSON-encoded application entry
}

message AppendEntriesRequest {
  int64 term = 1;
  string leader_id = 2;
  int64 prev_log_index = 3;
  int64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  int64 leader_commit = 6;
}
message AppendEntriesResponse {
  int64 term = 1;
  bool success = 2;
}
